A celebrity is a person who is known to all but does not know anyone at a party. A party is being organized by some people. A square matrix mat[][] of size n*n is used to 
represent people at the party such that if an element of row i and column j is set to 1 it means ith person knows jth person. You need to return the index of the celebrity in
the party, if the celebrity does not exist, return -1.

Note: Follow 0-based indexing.

Examples:

Input: mat[][] = [[1, 1, 0],
                [0, 1, 0],
                [0, 1, 1]]
Output: 1
Explanation: 0th and 2nd person both know 1st person and 1st person does not know anyone. Therefore, 1 is the celebrity person

JAVA CODE:

class Solution {
    public int celebrity(int mat[][]) {
        // code here
        int n = mat.length;
        Stack<Integer> s = new Stack<>();
        
        for(int i = 0;i < n;i++){
            s.push(i);
        }
        
        while(s.size() > 1){
            int a = s.pop();
            int b = s.pop();
            
            if(mat[a][b] == 1){
                s.push(b);
            }
            else{
                s.push(a);
            }
        }
        
        int celeb = s.pop();
        for(int i = 0;i < n;i++){
            if(i != celeb){
                if(mat[i][celeb] == 0 || mat[celeb][i] == 1){
                    return -1;
                }
            }
        }
        return celeb;
    }
}
